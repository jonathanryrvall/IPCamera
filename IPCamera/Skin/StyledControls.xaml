<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--  Header buttons  -->
    <BitmapImage x:Key="ExitButton" UriSource="pack://application:,,,/RS_Custom;component/Img/ButtonExitWhite.png" />
    <BitmapImage x:Key="MaximizeButton" UriSource="pack://application:,,,/RS_Custom;component/Img/ButtonMaximizeWhite.png" />
    <BitmapImage x:Key="ResetButton" UriSource="pack://application:,,,/RS_Custom;component/Img/ButtonResetWhite.png" />
    <BitmapImage x:Key="MinimizeButton" UriSource="pack://application:,,,/RS_Custom;component/Img/ButtonMinimizeWhite.png" />
    <BitmapImage x:Key="ScreenshotButton" UriSource="pack://application:,,,/RS_Custom;component/Img/ButtonScreenshot.png" />

    <!--  Red blinker  -->
    <Style x:Key="RedBlinker" TargetType="{x:Type Border}">
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="Background" Value="Red" />

        <Style.Resources>
            <Storyboard x:Key="flashAnimation">
                <DoubleAnimation AutoReverse="True"
                                 RepeatBehavior="Forever"
                                 Storyboard.TargetProperty="Opacity"
                                 From="1"
                                 To="0"
                                 Duration="0:0:0.5" />
            </Storyboard>
        </Style.Resources>

        <Style.Triggers>
            <Trigger Property="Visibility" Value="Visible">
                <!--<Setter Property="Visibility" Value="Visible" />-->
                <Trigger.EnterActions>
                    <BeginStoryboard Name="flash" Storyboard="{StaticResource flashAnimation}" />
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="flash" />
                </Trigger.ExitActions>
            </Trigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="GridSplitterPreviewStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Fill="#80000000" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GridSplitterStyle1" TargetType="{x:Type GridSplitter}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
        <Setter Property="PreviewStyle" Value="{StaticResource GridSplitterPreviewStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridSplitter}">
                    <Border Background="Transparent">
                        <Canvas HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RenderOptions.EdgeMode="Aliased"
                                UseLayoutRounding="True">
                            <Line Stroke="#606060"
                                  StrokeThickness="1"
                                  X1="1"
                                  X2="1"
                                  Y1="0"
                                  Y2="50" />
                            <Line Stroke="#606060"
                                  StrokeThickness="1"
                                  X1="5"
                                  X2="5"
                                  Y1="0"
                                  Y2="50" />
                        </Canvas>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  Groupbox  -->
    <Style TargetType="GroupBox">
        <Setter Property="BitmapEffect">
            <Setter.Value>
                <DropShadowBitmapEffect Opacity="0.5" ShadowDepth="0" />
            </Setter.Value>
        </Setter>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="{DynamicResource GroupBoxContentBackground}" />

        <Setter Property="Foreground" Value="{DynamicResource GroupBoxText}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupBox">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <!--  TOPTHINGIE  -->
                        <Border Grid.Row="0"
                                Background="{DynamicResource GroupBoxBackground}"
                                BorderBrush="{DynamicResource GroupBoxBorder}"
                                BorderThickness="1">
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">
                                <ContentPresenter VerticalAlignment="Center"
                                                  ContentSource="Header"
                                                  RecognizesAccessKey="True" />
                            </TextBlock>
                        </Border>

                        <!--  CONTENTTHINGIE  -->
                        <Border Grid.Row="1"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{DynamicResource GroupBoxBorder}"
                                BorderThickness="1,0,1,1">
                            <ContentPresenter Margin="0" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  HeaderButton  -->
    <Style x:Key="HeaderButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource HeaderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource HeaderTextBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Content="{TemplateBinding Content}" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource HeaderBrushHover}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource HeaderBrushClick}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Button  -->
    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource ButtonNormalBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonNormalForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonNormalBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="5,0,5,0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter"
                                              Margin="0,0,0,0"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Content="{TemplateBinding Content}" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ButtonHoverBackground}" />
                            <Setter Property="Foreground" Value="{DynamicResource ButtonHoverForeground}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ButtonHoverBorder}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ButtonClickBackground}" />
                            <Setter Property="Foreground" Value="{DynamicResource ButtonClickForeground}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ButtonClickBorder}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource ButtonDisabledBackground}" />
                            <Setter Property="Foreground" Value="{DynamicResource ButtonDisabledForeground}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ButtonDisabledBorder}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!--  TabControl  -->
    <Style TargetType="TabControl">
        <Setter Property="BitmapEffect">
            <Setter.Value>
                <DropShadowBitmapEffect Opacity="0.5" ShadowDepth="0" />
            </Setter.Value>
        </Setter>

        <Setter Property="Background" Value="{DynamicResource PaperBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource GroupBoxBorder}" />
        <Setter Property="Padding" Value="0" />
    </Style>
    <Style TargetType="TabItem">

        <Setter Property="Foreground" Value="{DynamicResource HeaderTextBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border Name="Border"
                            Height="25"
                            Margin="-2,-2,2,0"
                            Background="Transparent"
                            BorderThickness="0"
                            CornerRadius="0">
                        <ContentPresenter x:Name="ContentSite"
                                          Margin="20,0,20,0"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          ContentSource="Header" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource HeaderBrush}" />
                        </Trigger>-->
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource HeaderBrushHover}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource GroupBoxBorder}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Label  -->
    <Style TargetType="{x:Type Label}">
        <Setter Property="Padding" Value="0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource PaperTextEnabledBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>

    <!--  Listbox  -->
    <Style TargetType="ListBox">
        <Setter Property="Background" Value="{DynamicResource ListBoxNormalBackground}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource ListBoxNormalBorder}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Border Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer Margin="0" Focusable="false">
                            <StackPanel Margin="0" IsItemsHost="True" />
                        </ScrollViewer>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource ListBoxDisabledBackground}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ListBoxDisabledBorder}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!--  ListBoxItem  -->
    <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="Foreground" Value="{DynamicResource ListBoxItemNormalForeground}" />
        <Setter Property="Padding" Value="4,2,0,2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ListBoxItemHoverBackground}" />
                            <Setter Property="Foreground" Value="{DynamicResource ListBoxItemHoverForeground}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ListBoxItemClickBackground}" />
                            <Setter Property="Foreground" Value="{DynamicResource ListBoxItemClickForeground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource ListBoxItemDisabledBackground}" />
                            <Setter Property="Foreground" Value="{DynamicResource ListBoxItemDisabledForeground}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Textbox  -->
    <Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBoxBase}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Padding" Value="6,0,0,0" />
        <Setter Property="Height" Value="25" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxNormalBorder}" />
        <Setter Property="Background" Value="{DynamicResource TextBoxNormalBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBoxNormalForeground}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer x:Name="PART_ContentHost" Margin="0" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource TextBoxHoverBackground}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextBoxHoverForeground}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxHoverBorder}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="{DynamicResource TextBoxClickBackground}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextBoxClickForeground}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxClickBorder}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource TextBoxDisabledBackground}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextBoxDisabledForeground}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxDisabledBorder}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  PasswordBox  -->
    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="Padding" Value="6,0,0,0" />
        <Setter Property="Height" Value="25" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource FieldBorderBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxNormalBorder}" />
        <Setter Property="Background" Value="{DynamicResource TextBoxNormalBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBoxNormalForeground}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer x:Name="PART_ContentHost" Margin="0" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource TextBoxHoverBackground}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextBoxHoverForeground}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxHoverBorder}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="{DynamicResource TextBoxClickBackground}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextBoxClickForeground}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxClickBorder}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource TextBoxDisabledBackground}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextBoxDisabledForeground}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxDisabledBorder}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  ToggleButton  -->
    <Style TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource HeaderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource HeaderTextBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="5,0,5,0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Content="{TemplateBinding Content}" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource HeaderBrushHover}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource HeaderBrushClick}" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource HeaderBrushClick}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  RadioButton  -->
    <Style x:Key="{x:Type RadioButton}" TargetType="{x:Type RadioButton}">
        <Setter Property="Height" Value="18" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Foreground" Value="{DynamicResource RBCBNormalForeground}" />
        <Setter Property="Background" Value="{DynamicResource RBCBNormalBackground}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid Width="18" Height="18">
                                <Ellipse x:Name="Border"
                                         Fill="{TemplateBinding Background}"
                                         Stroke="{TemplateBinding Foreground}"
                                         StrokeThickness="1" />
                                <Ellipse x:Name="CheckMark"
                                         Margin="4"
                                         Fill="{TemplateBinding Foreground}" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="4,0,0,0"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource RBCBHoverBackground}" />
                            <Setter Property="Foreground" Value="{DynamicResource RBCBHoverForeground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{DynamicResource RBCBClickBackground}" />
                            <Setter Property="Foreground" Value="{DynamicResource RBCBClickForeground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource RBCBDisabledBackground}" />
                            <Setter Property="Foreground" Value="{DynamicResource RBCBDisabledForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  CheckBox  -->
    <Style x:Key="{x:Type CheckBox}" TargetType="CheckBox">
        <Setter Property="Height" Value="18" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Foreground" Value="{DynamicResource RBCBNormalForeground}" />
        <Setter Property="Background" Value="{DynamicResource RBCBNormalBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border"
                                    Width="18"
                                    Height="18"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding Foreground}"
                                    BorderThickness="1"
                                    CornerRadius="1">
                                <Polygon Name="CheckMark"
                                         Fill="{TemplateBinding Foreground}"
                                         Points="1,9 6.8,13, 14.7,6 12.8,3 6.8,10 3.2,7" />
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="4,0,0,0"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource RBCBHoverBackground}" />
                            <Setter Property="Foreground" Value="{DynamicResource RBCBHoverForeground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{DynamicResource RBCBClickBackground}" />
                            <Setter Property="Foreground" Value="{DynamicResource RBCBClickForeground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource RBCBDisabledBackground}" />
                            <Setter Property="Foreground" Value="{DynamicResource RBCBDisabledForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  ScrollBar  -->
    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Foreground" Value="{DynamicResource ScrollBarButtonNormalForeground}" />
        <Setter Property="Background" Value="{DynamicResource ScrollBarButtonNormalBackground}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0">
                        <Path HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
                              Fill="{TemplateBinding Foreground}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource ScrollBarButtonHoverForeground}" />
                            <Setter Property="Background" Value="{DynamicResource ScrollBarButtonHoverBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource ScrollBarButtonClickForeground}" />
                            <Setter Property="Background" Value="{DynamicResource ScrollBarButtonClickBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Background" Value="{DynamicResource ScrollBarThumbNormalBackground}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Name="bd" Background="{TemplateBinding Background}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource ScrollBarThumbHoverBackground}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter Property="Background" Value="{DynamicResource ScrollBarThumbClickBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="18" />
                <RowDefinition Height="0.00001*" />
                <RowDefinition MaxHeight="18" />
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3" Background="{DynamicResource ScrollbarNormalBackground}" />
            <RepeatButton Grid.Row="0"
                          Height="18"
                          Command="ScrollBar.LineUpCommand"
                          Content="M 0 4 L 8 4 L 4 0 Z"
                          Style="{StaticResource ScrollBarLineButton}" />
            <Track Name="PART_Track"
                   Grid.Row="1"
                   IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarPageButton}" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Background="{DynamicResource HorizontalNormalBrush}" Style="{StaticResource ScrollBarThumb}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarPageButton}" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Row="3"
                          Height="18"
                          Command="ScrollBar.LineDownCommand"
                          Content="M 0 0 L 4 4 L 8 0 Z"
                          Style="{StaticResource ScrollBarLineButton}" />
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="18" />
                <ColumnDefinition Width="0.00001*" />
                <ColumnDefinition MaxWidth="18" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="3" Background="{DynamicResource ScrollbarNormalBackground}" />
            <RepeatButton Grid.Column="0"
                          Width="18"
                          Command="ScrollBar.LineLeftCommand"
                          Content="M 4 0 L 4 8 L 0 4 Z"
                          Style="{StaticResource ScrollBarLineButton}" />
            <Track Name="PART_Track"
                   Grid.Column="1"
                   IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageLeftCommand" Style="{StaticResource ScrollBarPageButton}" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Background="{DynamicResource NormalBrush}" Style="{StaticResource ScrollBarThumb}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageRightCommand" Style="{StaticResource ScrollBarPageButton}" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Column="3"
                          Width="18"
                          Command="ScrollBar.LineRightCommand"
                          Content="M 0 0 L 4 4 L 0 8 Z"
                          Style="{StaticResource ScrollBarLineButton}" />
        </Grid>
    </ControlTemplate>
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Height" Value="18" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="18" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  ScrollViewer  -->
    <Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <ScrollContentPresenter Grid.Column="1" />

                        <ScrollBar Name="PART_VerticalScrollBar"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Value="{TemplateBinding VerticalOffset}" />
                        <ScrollBar Name="PART_HorizontalScrollBar"
                                   Grid.Row="1"
                                   Grid.Column="1"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   Orientation="Horizontal"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Value="{TemplateBinding HorizontalOffset}" />

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ComboBox  -->
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="25" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border"
                    Grid.ColumnSpan="2"
                    Background="{DynamicResource ComboBoxNormalBackground}"
                    BorderBrush="{DynamicResource ComboBoxNormalBorder}"
                    BorderThickness="1" />
            <Border x:Name="Line"
                    Margin="1"
                    Background="{DynamicResource ComboBoxNormalBackground}"
                    BorderBrush="{DynamicResource ComboBoxNormalBorder}"
                    BorderThickness="0,0,1,0" />
            <Path x:Name="Arrow"
                  Grid.Column="1"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M 0 0 L 4 4 L 8 0 Z"
                  Fill="{DynamicResource ComboBoxNormalBorder}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ComboBoxHoverBorder}" />
                <Setter TargetName="Line" Property="BorderBrush" Value="{DynamicResource ComboBoxHoverBorder}" />
                <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource ComboBoxHoverBorder}" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource ComboBoxClickBackground}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ComboBoxClickBorder}" />
                <Setter TargetName="Line" Property="BorderBrush" Value="{DynamicResource ComboBoxClickBorder}" />
                <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource ComboBoxClickBorder}" />
                <Setter TargetName="Line" Property="Background" Value="{DynamicResource ComboBoxClickBackground}" />
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost"
                Background="{DynamicResource ComboBoxNormalBackground}"
                Focusable="False" />
    </ControlTemplate>


    <Style TargetType="{x:Type ComboBox}">

        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="Foreground" Value="{DynamicResource ComboBoxNormalForeground}" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="MaxHeight" Value="25" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>

                        <ToggleButton Name="ToggleButton"
                                      Grid.Column="2"
                                      Height="25"
                                      HorizontalAlignment="Stretch"
                                      ClickMode="Press"
                                      Focusable="false"
                                      IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      Template="{StaticResource ComboBoxToggleButton}" />

                        <ContentPresenter Name="ContentSite"
                                          Margin="3,3,23,3"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          IsHitTestVisible="False" />

                        <TextBox x:Name="PART_EditableTextBox"
                                 Width="100"
                                 Margin="3,3,23,3"
                                 HorizontalAlignment="Stretch"
                                 VerticalAlignment="Stretch"
                                 VerticalContentAlignment="Center"
                                 Background="Transparent"
                                 Focusable="True"
                                 Foreground="{DynamicResource ComboBoxNormalForeground}"
                                 IsReadOnly="{TemplateBinding IsReadOnly}"
                                 Style="{x:Null}"
                                 Template="{StaticResource ComboBoxTextBox}"
                                 Visibility="Hidden" />

                        <Popup Name="Popup"
                               AllowsTransparency="True"
                               Focusable="False"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               Placement="Bottom">
                            <Grid Name="DropDown"
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                  SnapsToDevicePixels="True">
                                <Border x:Name="DropDownBorder"
                                        Background="{DynamicResource ComboBoxClickBackground}"
                                        BorderBrush="{DynamicResource ComboBoxClickBorder}"
                                        BorderThickness="1,0,1,1" />
                                <ScrollViewer Margin="0" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource ComboBoxDisabledForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <Style x:Key="DataGridComboboxColumn" TargetType="{x:Type ComboBox}">

        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="Foreground" Value="{DynamicResource ComboBoxNormalForeground}" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="MaxHeight" Value="25" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>

                        <ToggleButton Name="ToggleButton"
                                      Grid.Column="2"
                                      Height="25"
                                      HorizontalAlignment="Stretch"
                                      ClickMode="Press"
                                      Focusable="false"
                                      IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      Template="{StaticResource ComboBoxToggleButton}" />

                        <ContentPresenter Name="ContentSite"
                                          Margin="3,3,23,3"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          IsHitTestVisible="False" />

                        <TextBox x:Name="PART_EditableTextBox"
                                 Width="100"
                                 Margin="3,3,23,3"
                                 HorizontalAlignment="Stretch"
                                 VerticalAlignment="Stretch"
                                 VerticalContentAlignment="Center"
                                 Background="Transparent"
                                 Focusable="True"
                                 Foreground="{DynamicResource ComboBoxNormalForeground}"
                                 IsReadOnly="{TemplateBinding IsReadOnly}"
                                 Style="{x:Null}"
                                 Template="{StaticResource ComboBoxTextBox}"
                                 Visibility="Hidden" />

                        <Popup Name="Popup"
                               AllowsTransparency="True"
                               Focusable="False"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               Placement="Bottom">
                            <Grid Name="DropDown"
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                  SnapsToDevicePixels="True">
                                <Border x:Name="DropDownBorder"
                                        Background="{DynamicResource ComboBoxClickBackground}"
                                        BorderBrush="{DynamicResource ComboBoxClickBorder}"
                                        BorderThickness="1,0,1,1" />
                                <ScrollViewer Margin="0" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource ComboBoxDisabledForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Background" Value="{DynamicResource ComboBoxItemNormalBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource ComboBoxItemNormalForeground}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Border"
                            Margin="1,0,1,0"
                            Padding="2,0,0,0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{x:Null}"
                            BorderThickness="0"
                            SnapsToDevicePixels="true">
                        <ContentPresenter Margin="2,0,0,0" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ComboBoxItemClickBackground}" />
                            <Setter Property="Foreground" Value="{DynamicResource ComboBoxItemClickForeground}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource ComboBoxItemHoverBackground}" />
                            <Setter Property="Foreground" Value="{DynamicResource ComboBoxItemHoverForeground}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  DataGrid  -->
    <Style TargetType="DataGridCell">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{DynamicResource DataGridRowHoverBackground}" />
                <Setter Property="Foreground" Value="{DynamicResource DataGridRowHoverForeground}" />
            </Trigger>

            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" Value="{DynamicResource DataGridRowClickBackground}" />
                <Setter Property="Foreground" Value="{DynamicResource DataGridRowClickForeground}" />
            </Trigger>

        </Style.Triggers>
    </Style>

    <Style TargetType="DataGridRow">

        <Setter Property="Background" Value="{DynamicResource DataGridRowNormalBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource DataGridRowNormalForeground}" />
        <Setter Property="Height" Value="25" />
        <Style.Triggers>

            <DataTrigger Binding="{Binding Visible}" Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Visible}" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{DynamicResource DataGridRowHoverBackground}" />
                <Setter Property="Foreground" Value="{DynamicResource DataGridRowHoverForeground}" />
            </Trigger>

            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" Value="{DynamicResource DataGridRowClickBackground}" />
                <Setter Property="Foreground" Value="{DynamicResource DataGridRowClickForeground}" />
            </Trigger>

            <!--<DataTrigger Binding="{Binding ColorCode}" Value="1">
                <Setter Property="Foreground" Value="Yellow"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ColorCode}" Value="2">
                <Setter Property="Foreground" Value="#ffd6eeff"/>
            </DataTrigger>-->


        </Style.Triggers>
    </Style>
    <Style TargetType="DataGridRowHeader">
        <Setter Property="Width" Value="0" />
    </Style>
    <Style TargetType="DataGrid">
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="CanUserReorderColumns" Value="True" />
        <Setter Property="CanUserSortColumns" Value="True" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="CanUserDeleteRows" Value="True" />
        <Setter Property="GridLinesVisibility" Value="All" />
        <Setter Property="Background" Value="{DynamicResource DataGridBackgroundBrushA1}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource DataGridBorderBrush}" />
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource DataGridGridLinesBrush}" />
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource DataGridGridLinesBrush}" />

        <Setter Property="SelectionUnit" Value="FullRow" />
        <Setter Property="CanUserResizeRows" Value="False" />
    </Style>
    <Style TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderTextBrush}" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Padding" Value="15,0,15,0" />

        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="SortDirection" Value="{x:Null}">
                <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackgroundBrush}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="SortDirection" Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource DataGridHeaderMouseOverBackgroundBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true" />
                    <Condition Property="SortDirection" Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource DataGridHeaderMouseOverBackgroundBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="true" />
                    <Condition Property="SortDirection" Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource DataGridHeaderSortedBackgroundBrush}" />
            </MultiTrigger>
            <Trigger Property="SortDirection" Value="Ascending">
                <Setter Property="Background" Value="{DynamicResource DataGridHeaderSortedBackgroundBrush}" />
            </Trigger>
            <Trigger Property="SortDirection" Value="Descending">
                <Setter Property="Background" Value="{DynamicResource DataGridHeaderSortedBackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderTextBrushDisabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="NarrowDataGridColumnHeader" TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderTextBrush}" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Padding" Value="5,0,5,0" />

        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="SortDirection" Value="{x:Null}">
                <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackgroundBrush}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="SortDirection" Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource DataGridHeaderMouseOverBackgroundBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true" />
                    <Condition Property="SortDirection" Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource DataGridHeaderMouseOverBackgroundBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="true" />
                    <Condition Property="SortDirection" Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource DataGridHeaderSortedBackgroundBrush}" />
            </MultiTrigger>
            <Trigger Property="SortDirection" Value="Ascending">
                <Setter Property="Background" Value="{DynamicResource DataGridHeaderSortedBackgroundBrush}" />
            </Trigger>
            <Trigger Property="SortDirection" Value="Descending">
                <Setter Property="Background" Value="{DynamicResource DataGridHeaderSortedBackgroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Slider  -->
    <Style x:Key="SliderButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Height" Value="14" />
        <Setter Property="Width" Value="14" />
        <Setter Property="Background" Value="{DynamicResource SliderKnobNormal}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Ellipse Name="Ellipse" Fill="{TemplateBinding Background}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource SliderKnobHover}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter Property="Background" Value="{DynamicResource SliderKnobClick}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource SliderKnobDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="HorizontalSlider" TargetType="{x:Type Slider}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" MinHeight="{TemplateBinding Slider.MinHeight}" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <TickBar Name="TopTick"
                     Height="4"
                     Fill="Pink"
                     Placement="Top"
                     SnapsToDevicePixels="True"
                     Visibility="Collapsed" />
            <Border Name="TrackBackground"
                    Grid.Row="1"
                    Height="4"
                    Margin="0"
                    Background="{DynamicResource SliderTrackNormal}"
                    BorderThickness="0" />
            <Track Name="PART_Track" Grid.Row="1">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="Slider.DecreaseLarge" Style="{StaticResource SliderButtonStyle}" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource SliderThumbStyle}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="Slider.IncreaseLarge" Style="{StaticResource SliderButtonStyle}" />
                </Track.IncreaseRepeatButton>
            </Track>
            <TickBar Name="BottomTick"
                     Grid.Row="2"
                     Height="4"
                     Fill="{TemplateBinding Foreground}"
                     Placement="Bottom"
                     SnapsToDevicePixels="True"
                     Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="TrackBackground" Property="Background" Value="{DynamicResource SliderTrackDisabled}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="VerticalSlider" TargetType="{x:Type Slider}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding Slider.MinWidth}" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TickBar Name="TopTick"
                     Width="4"
                     Fill="Orange"
                     Placement="Left"
                     SnapsToDevicePixels="True"
                     Visibility="Collapsed" />
            <Border Name="TrackBackground"
                    Grid.Column="1"
                    Width="4"
                    Margin="0"
                    Background="{DynamicResource SliderTrackNormal}"
                    BorderThickness="0"
                    CornerRadius="2" />
            <Track Name="PART_Track" Grid.Column="1">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="Slider.DecreaseLarge" Style="{StaticResource SliderButtonStyle}" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource SliderThumbStyle}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="Slider.IncreaseLarge" Style="{StaticResource SliderButtonStyle}" />
                </Track.IncreaseRepeatButton>
            </Track>
            <TickBar Name="BottomTick"
                     Grid.Column="2"
                     Width="4"
                     Fill="{TemplateBinding Foreground}"
                     Placement="Right"
                     SnapsToDevicePixels="True"
                     Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="TrackBackground" Property="Background" Value="{DynamicResource SliderTrackDisabled}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type Slider}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />

        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="MinWidth" Value="50" />
                <Setter Property="MinHeight" Value="21" />
                <Setter Property="Template" Value="{StaticResource HorizontalSlider}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="MinWidth" Value="21" />
                <Setter Property="MinHeight" Value="50" />
                <Setter Property="Template" Value="{StaticResource VerticalSlider}" />
            </Trigger>
        </Style.Triggers>
    </Style>








    <!--  Control colors.  -->
    <Color x:Key="WindowColor">#FFE8EDF9</Color>
    <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
    <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

    <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
    <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
    <Color x:Key="DisabledForegroundColor">#FF888888</Color>

    <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
    <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

    <Color x:Key="ControlLightColor">White</Color>
    <Color x:Key="ControlMediumColor">#FF7381F9</Color>
    <Color x:Key="ControlDarkColor">#FF211AA9</Color>

    <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
    <Color x:Key="ControlPressedColor">#FF211AA9</Color>


    <Color x:Key="GlyphColor">#FF444444</Color>
    <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

    <!--  Border colors  -->
    <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
    <Color x:Key="BorderMediumColor">#FF888888</Color>
    <Color x:Key="BorderDarkColor">#FF444444</Color>

    <Color x:Key="PressedBorderLightColor">#FF888888</Color>
    <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

    <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
    <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

    <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

    <!--  Control-specific resources.  -->
    <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
    <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
    <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

    <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

    <LinearGradientBrush x:Key="MenuPopupBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="{DynamicResource ControlLightColor}" />
        <GradientStop Offset="0.5" Color="{DynamicResource ControlMediumColor}" />
        <GradientStop Offset="1" Color="{DynamicResource ControlLightColor}" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#000000FF" />
                <GradientStop Offset="0.4" Color="#600000FF" />
                <GradientStop Offset="0.6" Color="#600000FF" />
                <GradientStop Offset="1" Color="#000000FF" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <!--  Progressbar  -->
    <Style x:Key="{x:Type ProgressBar}" TargetType="{x:Type ProgressBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid MinWidth="25"
                          MinHeight="5"
                          Background="{TemplateBinding Background}">
                        <Border x:Name="PART_Track" />
                        <Border x:Name="PART_Indicator"
                                HorizontalAlignment="Left"
                                Background="{TemplateBinding Foreground}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{x:Null}" />
    </Style>
</ResourceDictionary>